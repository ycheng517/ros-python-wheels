name: Test ROS Python Wheels Matrix

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Debian slim with different ROS distros
          - python-version: "3.10"
            os-type: debian-slim
            container: python:3.10-slim
            install-cmd: apt-get update && apt-get install -y git
            ros-distro: humble
          - python-version: "3.12"
            os-type: debian-slim
            container: python:3.12-slim
            install-cmd: apt-get update && apt-get install -y git
            ros-distro: jazzy
          - python-version: "3.12"
            os-type: debian-slim
            container: python:3.12-slim
            install-cmd: apt-get update && apt-get install -y git
            ros-distro: kilted
          # Ubuntu 24.04 with different ROS distros
          - python-version: "3.12"
            os-type: ubuntu-22.04
            container: ubuntu:22.04
            install-cmd: apt-get update && apt-get install -y python3 python3-pip git
            ros-distro: humble
          - python-version: "3.12"
            os-type: ubuntu-24.04
            container: ubuntu:24.04
            install-cmd: apt-get update && apt-get install -y python3 python3-pip git
            ros-distro: jazzy
          - python-version: "3.12"
            os-type: ubuntu-24.04
            container: ubuntu:24.04
            install-cmd: apt-get update && apt-get install -y python3 python3-pip git
            ros-distro: kilted

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: ${{ matrix.install-cmd }}

      - name: Install ROS Python packages
        run: |
          python3 -m pip install --break-system-packages --extra-index-url https://dl.cloudsmith.io/public/ros-python-wheels/${{ matrix.ros-distro }}/python/simple/ \
            ros-rclpy[fastrtps] ros-test-msgs pytest

      - name: Set environment variables
        run: |
          echo "RMW_IMPLEMENTATION=rmw_fastrtps_cpp" >> $GITHUB_ENV

      - name: Basic test to see if rclpy init works
        run: |
          export LD_LIBRARY_PATH=$(python3 -m pip show ros-rclpy | awk '/^Location:/ {print $2}')/ros_runtime_libs
          python3 -c "import rclpy; rclpy.init(); print('rclpy initialized successfully'); rclpy.shutdown()"

      - name: Make test script executable
        run: chmod +x scripts/run_rclpy_tests.sh

      - name: Run RClPy tests
        run: sh ./scripts/run_rclpy_tests.sh ${{ matrix.ros-distro }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os-type }}-${{ matrix.ros-distro }}-python${{ matrix.python-version }}
          path: |
            /tmp/rclpy_test/
          retention-days: 7
